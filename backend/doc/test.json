<ref * 2 > ServerResponse {
	_events: [Object: null prototype] {
		finish: [[Function: bound resOnFinish], [Function: onevent]],
			end: [Function: onevent]
	},
	_eventsCount: 2,
		_maxListeners: undefined,
			outputData: [],
				outputSize: 0,
					writable: true,
						destroyed: false,
							_last: false,
								chunkedEncoding: false,
									shouldKeepAlive: true,
										maxRequestsOnConnectionReached: false,
											_defaultKeepAlive: true,
												useChunkedEncodingByDefault: true,
													sendDate: true,
														_removedConnection: false,
															_removedContLen: false,
																_removedTE: false,
																	strictContentLength: false,
																		_contentLength: '197',
																			_hasBody: true,
																				_trailer: '',
																					finished: true,
																						_headerSent: true,
																							_closed: false,
																								socket: <ref * 1 > Socket {
		connecting: false,
			_hadError: false,
				_parent: null,
					_host: null,
						_closeAfterHandlingError: false,
							_readableState: ReadableState {
			highWaterMark: 16384,
				buffer: BufferList { head: null, tail: null, length: 0 },
			length: 0,
				pipes: [],
					awaitDrainWriters: null,
						[Symbol(kState)]: 59773016
		},
		_events: [Object: null prototype] {
			end: [Array],
				timeout: [Function: socketOnTimeout],
					data: [Function: bound socketOnData],
						error: [Array],
							close: [Array],
								drain: [Function: bound socketOnDrain],
									resume: [Function: onSocketResume],
										pause: [Function: onSocketPause]
		},
		_eventsCount: 8,
			_maxListeners: undefined,
				_writableState: WritableState {
			highWaterMark: 16384,
				length: 0,
					corked: 0,
						onwrite: [Function: bound onwrite],
							writelen: 0,
								bufferedIndex: 0,
									pendingcb: 1,
										[Symbol(kState)]: 839647300,
											[Symbol(kBufferedValue)]: null,
												[Symbol(kWriteCbValue)]: [Function(anonymous)],
													[Symbol(kAfterWriteTickInfoValue)]: [Object]
		},
		allowHalfOpen: true,
			_sockname: null,
				_pendingData: null,
					_pendingEncoding: '',
						server: Server {
			maxHeaderSize: undefined,
				insecureHTTPParser: undefined,
					requestTimeout: 300000,
						headersTimeout: 60000,
							keepAliveTimeout: 5000,
								connectionsCheckingInterval: 30000,
									requireHostHeader: true,
										joinDuplicateHeaders: undefined,
											rejectNonStandardBodyWrites: false,
												_events: [Object: null prototype],
													_eventsCount: 3,
														_maxListeners: undefined,
															_connections: 1,
																_handle: [TCP],
																	_usingWorkers: false,
																		_workers: [],
																			_unref: false,
																				allowHalfOpen: true,
																					pauseOnConnect: false,
																						noDelay: true,
																							keepAlive: false,
																								keepAliveInitialDelay: 0,
																									highWaterMark: 16384,
																										httpAllowHalfOpen: false,
																											timeout: 0,
																												maxHeadersCount: null,
																													maxRequestsPerSocket: 0,
																														_connectionKey: '6::::8000',
																															[Symbol(IncomingMessage)]: [Function: IncomingMessage],
																																[Symbol(ServerResponse)]: [Function: ServerResponse],
																																	[Symbol(kCapture)]: false,
																																		[Symbol(async_id_symbol)]: 10,
																																			[Symbol(kUniqueHeaders)]: null,
																																				[Symbol(http.server.connections)]: ConnectionsList { },
			[Symbol(http.server.connectionsCheckingInterval)]: Timeout {
				_idleTimeout: 30000,
					_idlePrev: [TimersList],
						_idleNext: [TimersList],
							_idleStart: 978,
								_onTimeout: [Function: bound checkConnections],
									_timerArgs: undefined,
										_repeat: 30000,
											_destroyed: false,
												[Symbol(refed)]: false,
													[Symbol(kHasPrimitive)]: false,
														[Symbol(asyncId)]: 12,
															[Symbol(triggerId)]: 11
			}
		},
		_server: Server {
			maxHeaderSize: undefined,
				insecureHTTPParser: undefined,
					requestTimeout: 300000,
						headersTimeout: 60000,
							keepAliveTimeout: 5000,
								connectionsCheckingInterval: 30000,
									requireHostHeader: true,
										joinDuplicateHeaders: undefined,
											rejectNonStandardBodyWrites: false,
												_events: [Object: null prototype],
													_eventsCount: 3,
														_maxListeners: undefined,
															_connections: 1,
																_handle: [TCP],
																	_usingWorkers: false,
																		_workers: [],
																			_unref: false,
																				allowHalfOpen: true,
																					pauseOnConnect: false,
																						noDelay: true,
																							keepAlive: false,
																								keepAliveInitialDelay: 0,
																									highWaterMark: 16384,
																										httpAllowHalfOpen: false,
																											timeout: 0,
																												maxHeadersCount: null,
																													maxRequestsPerSocket: 0,
																														_connectionKey: '6::::8000',
																															[Symbol(IncomingMessage)]: [Function: IncomingMessage],
																																[Symbol(ServerResponse)]: [Function: ServerResponse],
																																	[Symbol(kCapture)]: false,
																																		[Symbol(async_id_symbol)]: 10,
																																			[Symbol(kUniqueHeaders)]: null,
																																				[Symbol(http.server.connections)]: ConnectionsList { },
			[Symbol(http.server.connectionsCheckingInterval)]: Timeout {
				_idleTimeout: 30000,
					_idlePrev: [TimersList],
						_idleNext: [TimersList],
							_idleStart: 978,
								_onTimeout: [Function: bound checkConnections],
									_timerArgs: undefined,
										_repeat: 30000,
											_destroyed: false,
												[Symbol(refed)]: false,
													[Symbol(kHasPrimitive)]: false,
														[Symbol(asyncId)]: 12,
															[Symbol(triggerId)]: 11
			}
		},
		parser: HTTPParser {
			'0': null,
				'1': [Function: parserOnHeaders],
					'2': [Function: parserOnHeadersComplete],
						'3': [Function: parserOnBody],
							'4': [Function: parserOnMessageComplete],
								'5': [Function: bound onParserExecute],
									'6': [Function: bound onParserTimeout],
										_headers: [],
											_url: '',
												socket: [Circular * 1],
													incoming: [IncomingMessage],
														outgoing: null,
															maxHeaderPairs: 2000,
																_consumed: true,
																	onIncoming: [Function: bound parserOnIncoming],
																		joinDuplicateHeaders: null,
																			[Symbol(resource_symbol)]: [HTTPServerAsyncResource]
		},
		on: [Function: socketListenerWrap],
			addListener: [Function: socketListenerWrap],
				prependListener: [Function: socketListenerWrap],
					setEncoding: [Function: socketSetEncoding],
						_paused: false,
							_httpMessage: [Circular * 2],
								_peername: { address: '::1', family: 'IPv6', port: 60347 },
		[Symbol(async_id_symbol)]: 188,
			[Symbol(kHandle)]: TCP {
			reading: true,
				onconnection: null,
					_consumed: true,
						[Symbol(owner_symbol)]: [Circular * 1]
		},
		[Symbol(lastWriteQueueSize)]: 0,
			[Symbol(timeout)]: null,
				[Symbol(kBuffer)]: null,
					[Symbol(kBufferCb)]: null,
						[Symbol(kBufferGen)]: null,
							[Symbol(kCapture)]: false,
								[Symbol(kSetNoDelay)]: true,
									[Symbol(kSetKeepAlive)]: false,
										[Symbol(kSetKeepAliveInitialDelay)]: 0,
											[Symbol(kBytesRead)]: 0,
												[Symbol(kBytesWritten)]: 0
	},
	_header: 'HTTP/1.1 200 OK\r\n' +
		'X-Powered-By: Express\r\n' +
		'Set-Cookie: token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YTcyYTI1ODgxYzU3MzI3MGI0ZmUxNyIsImlhdCI6MTcwNTQ1NDYyNiwiZXhwIjoxNzA1NDU4MjI2fQ.QZ2g_KJSiu_4bC-IgiFFrnmWpyL5-v7i3Rjki1GGsHg; Max-Age=0; Path=/; Expires=Wed, 17 Jan 2024 01:23:46 GMT; HttpOnly\r\n' +
		'Content-Type: application/json; charset=utf-8\r\n' +
		'Content-Length: 197\r\n' +
		'ETag: W/"c5-WA/tFW/TsLGltP0klbFNyCwnuk8"\r\n' +
		'Date: Wed, 17 Jan 2024 01:23:46 GMT\r\n' +
		'Connection: keep-alive\r\n' +
		'Keep-Alive: timeout=5\r\n' +
		'\r\n',
		_keepAliveTimeout: 5000,
			_onPendingData: [Function: bound updateOutgoingData],
				req: IncomingMessage {
		_readableState: ReadableState {
			highWaterMark: 16384,
				buffer: BufferList { head: null, tail: null, length: 0 },
			length: 0,
				pipes: [],
					awaitDrainWriters: null,
						[Symbol(kState)]: 60094486
		},
		_events: [Object: null prototype] { },
		_eventsCount: 0,
			_maxListeners: undefined,
				socket: <ref * 1 > Socket {
			connecting: false,
				_hadError: false,
					_parent: null,
						_host: null,
							_closeAfterHandlingError: false,
								_readableState: [ReadableState],
									_events: [Object: null prototype],
										_eventsCount: 8,
											_maxListeners: undefined,
												_writableState: [WritableState],
													allowHalfOpen: true,
														_sockname: null,
															_pendingData: null,
																_pendingEncoding: '',
																	server: [Server],
																		_server: [Server],
																			parser: [HTTPParser],
																				on: [Function: socketListenerWrap],
																					addListener: [Function: socketListenerWrap],
																						prependListener: [Function: socketListenerWrap],
																							setEncoding: [Function: socketSetEncoding],
																								_paused: false,
																									_httpMessage: [Circular * 2],
																										_peername: [Object],
																											[Symbol(async_id_symbol)]: 188,
																												[Symbol(kHandle)]: [TCP],
																													[Symbol(lastWriteQueueSize)]: 0,
																														[Symbol(timeout)]: null,
																															[Symbol(kBuffer)]: null,
																																[Symbol(kBufferCb)]: null,
																																	[Symbol(kBufferGen)]: null,
																																		[Symbol(kCapture)]: false,
																																			[Symbol(kSetNoDelay)]: true,
																																				[Symbol(kSetKeepAlive)]: false,
																																					[Symbol(kSetKeepAliveInitialDelay)]: 0,
																																						[Symbol(kBytesRead)]: 0,
																																							[Symbol(kBytesWritten)]: 0
		},
		httpVersionMajor: 1,
			httpVersionMinor: 1,
				httpVersion: '1.1',
					complete: true,
						rawHeaders: [
							'Content-Type',
							'application/json',
							'User-Agent',
							'PostmanRuntime/7.36.1',
							'Accept',
							'*/*',
							'Postman-Token',
							'3cc7a84a-4b22-4e61-a33b-b173ff606054',
							'Host',
							'localhost:8000',
							'Accept-Encoding',
							'gzip, deflate, br',
							'Connection',
							'keep-alive',
							'Content-Length',
							'65'
						],
							rawTrailers: [],
								joinDuplicateHeaders: null,
									aborted: false,
										upgrade: false,
											url: '/signin',
												method: 'POST',
													statusCode: null,
														statusMessage: null,
															client: <ref * 1 > Socket {
			connecting: false,
				_hadError: false,
					_parent: null,
						_host: null,
							_closeAfterHandlingError: false,
								_readableState: [ReadableState],
									_events: [Object: null prototype],
										_eventsCount: 8,
											_maxListeners: undefined,
												_writableState: [WritableState],
													allowHalfOpen: true,
														_sockname: null,
															_pendingData: null,
																_pendingEncoding: '',
																	server: [Server],
																		_server: [Server],
																			parser: [HTTPParser],
																				on: [Function: socketListenerWrap],
																					addListener: [Function: socketListenerWrap],
																						prependListener: [Function: socketListenerWrap],
																							setEncoding: [Function: socketSetEncoding],
																								_paused: false,
																									_httpMessage: [Circular * 2],
																										_peername: [Object],
																											[Symbol(async_id_symbol)]: 188,
																												[Symbol(kHandle)]: [TCP],
																													[Symbol(lastWriteQueueSize)]: 0,
																														[Symbol(timeout)]: null,
																															[Symbol(kBuffer)]: null,
																																[Symbol(kBufferCb)]: null,
																																	[Symbol(kBufferGen)]: null,
																																		[Symbol(kCapture)]: false,
																																			[Symbol(kSetNoDelay)]: true,
																																				[Symbol(kSetKeepAlive)]: false,
																																					[Symbol(kSetKeepAliveInitialDelay)]: 0,
																																						[Symbol(kBytesRead)]: 0,
																																							[Symbol(kBytesWritten)]: 0
		},
		_consuming: true,
			_dumped: false,
				next: [Function: next],
					baseUrl: '/api',
						originalUrl: '/api/signin',
							_parsedUrl: Url {
			protocol: null,
				slashes: null,
					auth: null,
						host: null,
							port: null,
								hostname: null,
									hash: null,
										search: null,
											query: null,
												pathname: '/signin',
													path: '/signin',
														href: '/signin',
															_raw: '/signin'
		},
		params: { },
		query: { },
		res: [Circular * 2],
			_startAt: [526997, 501289000],
				_startTime: 2024-01 - 17T01: 23: 45.992Z,
					_remoteAddress: '::1',
						body: { email: 'jhondoe@gmail.com', password: 'Jhon@123' },
		_body: true,
			length: undefined,
				secret: undefined,
					cookies: [Object: null prototype] { },
		signedCookies: [Object: null prototype] { },
		route: Route { path: '/signin', stack: [Array], methods: [Object] },
		[Symbol(kCapture)]: false,
			[Symbol(kHeaders)]: {
			'content-type': 'application/json',
				'user-agent': 'PostmanRuntime/7.36.1',
					accept: '*/*',
						'postman-token': '3cc7a84a-4b22-4e61-a33b-b173ff606054',
							host: 'localhost:8000',
								'accept-encoding': 'gzip, deflate, br',
									connection: 'keep-alive',
										'content-length': '65'
		},
		[Symbol(kHeadersCount)]: 16,
			[Symbol(kTrailers)]: null,
				[Symbol(kTrailersCount)]: 0
	},
	_sent100: false,
		_expect_continue: false,
			_maxRequestsPerSocket: 0,
				locals: [Object: null prototype] { },
	_startAt: [526997, 653401600],
		_startTime: 2024-01 - 17T01: 23: 46.144Z,
			writeHead: [Function: writeHead],
				__onFinished: [Function: listener] { queue: [[Function: logRequest]] },
	statusCode: 200,
		statusMessage: 'OK',
			[Symbol(kCapture)]: false,
				[Symbol(kBytesWritten)]: 0,
					[Symbol(kNeedDrain)]: false,
						[Symbol(corked)]: 0,
							[Symbol(kOutHeaders)]: [Object: null prototype] {
		'x-powered-by': ['X-Powered-By', 'Express'],
			'set-cookie': [
				'Set-Cookie',
				'token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YTcyYTI1ODgxYzU3MzI3MGI0ZmUxNyIsImlhdCI6MTcwNTQ1NDYyNiwiZXhwIjoxNzA1NDU4MjI2fQ.QZ2g_KJSiu_4bC-IgiFFrnmWpyL5-v7i3Rjki1GGsHg; Max-Age=0; Path=/; Expires=Wed, 17 Jan 2024 01:23:46 GMT; HttpOnly'
			],
				'content-type': ['Content-Type', 'application/json; charset=utf-8'],
					'content-length': ['Content-Length', '197'],
						etag: ['ETag', 'W/"c5-WA/tFW/TsLGltP0klbFNyCwnuk8"']
	},
	[Symbol(errored)]: null,
		[Symbol(kHighWaterMark)]: 16384,
			[Symbol(kRejectNonStandardBodyWrites)]: false,
				[Symbol(kUniqueHeaders)]: null
}
POST / api / signin 200 152.113 ms - 197